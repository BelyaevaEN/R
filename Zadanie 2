#Беляева Екатерина Николаевна — создайте модель множественной 
#линейной регрессии дневных потоков паров воды за весенний 
#период 2013 года по данным измерений методом турбулентной пульсации

setwd("C:/R2/Zadanie 2")
rm(list=ls())
library("tidyverse") 
library("readr")     
library("stringr")   
library("dplyr")     
library("ggplot2") 
library("tidyr")
library("stringr")
library("lubridate")

#Считываем файл 
#Пропускаем первую строку,заменяем все
#не числовые значения на NA, игнорируя строчки с символом "["

tbl = read_csv("eddypro.csv", skip = 1, na =c("","NA","-9999","-9999.0"), comment=c("["))

#Подготовка к анализу
tbl = tbl[-1,]; tbl
tbl = select(tbl, -(roll))
tbl = tbl %>% mutate_if(is.character, factor)
names(tbl) = names(tbl) %>% 
  str_replace_all("[!]","_emph_") %>% 
  str_replace_all("[?]","_quest_") %>% 
  str_replace_all("[*]","_star_") %>% 
  str_replace_all("[+]","_plus_") %>%
  str_replace_all("[-]","_minus_") %>%
  str_replace_all("[@]","_at_") %>%
  str_replace_all("[$]","_dollar_") %>%
  str_replace_all("[#]","_hash_") %>%
  str_replace_all("[/]","_div_") %>%
  str_replace_all("[%]","_perc_") %>%
  str_replace_all("[&]","_amp_") %>%
  str_replace_all("[\\^]","_power_") %>%
  str_replace_all("[()]","emph") 
glimpse(tbl)
#Отфильтруем данные для своего варианта
tbl = filter(tbl,DOY >= 60 & DOY <= 151)
tbl = filter(tbl, daytime == TRUE)

#Проведем корелляционный анализ
tbl_numeric = tbl[,sapply(tbl,is.numeric) ]
cor_td = cor(drop_na(tbl_numeric), method = "spearman") %>% as.data.frame %>% select(h2o_flux)
vars = row.names(cor_td)[cor_td$h2o_flux^2 > 0.2] %>% na.exclude
vars
formula = as.formula(paste("h2o_flux~", paste(vars,collapse = "+"), sep=""));formula

row_numbers = 1:length(tbl_numeric$h2o_flux)
teach = sample(row_numbers, floor(length(tbl_numeric$h2o_flux)*.7))
test = row_numbers[-teach]

teaching_tbl = tbl_numeric[teach,]
testing_tbl = tbl_numeric[test,]
#Создадим модели и проведем их анализ для получения наиболее 
#оптимальной модели
model0=lm(h2o_flux ~ (Tau + rand_err_Tau + H + rand_err_H + LE + qc_LE + 
                        rand_err_LE + co2_flux + rand_err_co2_flux + qc_h2o_flux + 
                        rand_err_h2o_flux + co2_molar_density + co2_mole_fraction + 
                        co2_mixing_ratio + h2o_time_lag + sonic_temperature + air_temperature + 
                        air_density + air_molar_volume + es + RH + VPD + max_speed + 
                        u_star_ + TKE + emphz_minus_demph_div_L + T_star_ + x_offset + 
                        x_90_perc_ + un_Tau + un_H + un_LE + un_co2_flux + un_h2o_flux + 
                        u_var + v_var + w_var + h2o_var + w_div_ts_cov + w_div_co2_cov + 
                        w_div_h2o_cov + co2...125 + co2...127 + flowrate),
          data = teaching_tbl)

coef(model0)
resid(model0)
confint(model0)
summary(model0)
anova(model0)

model1=lm(h2o_flux ~ (Tau + rand_err_Tau + H + rand_err_H + LE + qc_LE + 
                        rand_err_LE + co2_flux + rand_err_co2_flux + qc_h2o_flux + 
                        rand_err_h2o_flux + co2_molar_density + co2_mole_fraction + 
                        co2_mixing_ratio + h2o_time_lag + sonic_temperature + air_temperature + 
                        air_density + air_molar_volume + es + RH + VPD + 
                        u_star_ + TKE + emphz_minus_demph_div_L + T_star_ + x_offset + 
                        x_90_perc_ + un_Tau + un_H + un_LE + un_co2_flux + un_h2o_flux + 
                         w_var + h2o_var + w_div_ts_cov  + 
                        w_div_h2o_cov + co2...127 + flowrate),
          data = teaching_tbl)

coef(model1)
resid(model1)
confint(model1)
summary(model1)
anova(model1)
anova(model0, model1)

model2=lm(h2o_flux ~ (Tau + rand_err_Tau + H + rand_err_H + LE + qc_LE + 
                        rand_err_LE + co2_flux + rand_err_co2_flux + qc_h2o_flux + 
                        rand_err_h2o_flux + co2_molar_density + co2_mole_fraction + 
                        co2_mixing_ratio + h2o_time_lag + sonic_temperature + air_temperature + 
                        air_density + air_molar_volume + es + RH + VPD + 
                        u_star_ + TKE + emphz_minus_demph_div_L + T_star_ + x_offset + 
                        x_90_perc_ + un_Tau + un_H + un_LE + un_co2_flux + 
                        h2o_var + w_div_ts_cov  + 
                        w_div_h2o_cov + co2...127),
          data = teaching_tbl),
        
coef(model2)
resid(model2)
confint(model2)
summary(model2)
anova(model2)
anova(model1, model2)

model3=lm(h2o_flux ~ (Tau + rand_err_Tau + H + rand_err_H + LE + qc_LE + 
                        rand_err_LE + co2_flux + rand_err_co2_flux + qc_h2o_flux + 
                        rand_err_h2o_flux + co2_molar_density + co2_mole_fraction + 
                        co2_mixing_ratio + h2o_time_lag + sonic_temperature + air_temperature + 
                        air_density + air_molar_volume + es + RH + VPD + 
                        u_star_ + TKE + emphz_minus_demph_div_L + x_offset + 
                        x_90_perc_ + un_Tau + un_H + un_LE + un_co2_flux + 
                        h2o_var + w_div_ts_cov  + 
                        w_div_h2o_cov + co2...127),
          data = teaching_tbl)


coef(model3)
resid(model3)
confint(model3)
summary(model3)
anova(model3)
anova(model2, model3)

model4=lm(h2o_flux ~ (Tau + rand_err_Tau + H + rand_err_H + LE + qc_LE + 
                        rand_err_LE + co2_flux + qc_h2o_flux + 
                        rand_err_h2o_flux + co2_molar_density + 
                        co2_mixing_ratio + h2o_time_lag + air_temperature + 
                        air_molar_volume + es + RH + emphz_minus_demph_div_L + un_Tau + un_LE + un_co2_flux + 
                       w_div_ts_cov  + 
                        w_div_h2o_cov),
          data = teaching_tbl)
coef(model4)
resid(model4)
confint(model4)
summary(model4)
anova(model4)
anova(model3, model4)

model5=lm(h2o_flux ~ (Tau + rand_err_Tau + H + rand_err_H + LE + qc_LE + 
                        rand_err_LE + co2_flux + qc_h2o_flux + 
                        rand_err_h2o_flux + 
                        h2o_time_lag + 
                        es + RH + un_Tau + un_LE + un_co2_flux + 
                        w_div_ts_cov  + 
                        w_div_h2o_cov),
          data = teaching_tbl)
coef(model5)
resid(model5)
confint(model5)
summary(model5)
anova(model5)
anova(model4, model5)

model6=lm(h2o_flux ~ (Tau + rand_err_Tau + H + rand_err_H + LE + qc_LE + 
                        rand_err_LE + co2_flux + qc_h2o_flux + 
                        rand_err_h2o_flux + 
                        h2o_time_lag + 
                        RH + un_Tau + un_LE + un_co2_flux + 
                        w_div_ts_cov  + 
                        w_div_h2o_cov),
          data = teaching_tbl)
coef(model6)
resid(model6)
confint(model6)
summary(model6)
anova(model6)
anova(model5, model6)

model7=lm(h2o_flux ~ (Tau + rand_err_Tau + H + rand_err_H + LE + qc_LE + 
                        rand_err_LE + co2_flux + qc_h2o_flux + 
                        rand_err_h2o_flux + 
                        h2o_time_lag + 
                        RH + un_Tau + un_LE + 
                        w_div_ts_cov  + 
                        w_div_h2o_cov),
          data = teaching_tbl)
coef(model7)
resid(model7)
confint(model7)
summary(model7)
anova(model7)
anova(model6, model7)

model8=lm(h2o_flux ~ (Tau + rand_err_Tau + H + rand_err_H + LE + qc_LE + 
                        rand_err_LE + co2_flux + qc_h2o_flux + 
                        rand_err_h2o_flux + 
                        h2o_time_lag + 
                        RH + un_Tau + un_LE + 
                        w_div_ts_cov  + 
                        w_div_h2o_cov),
          data = teaching_tbl)
coef(model8)
resid(model8)
confint(model8)
summary(model8)
anova(model8)
anova(model7, model8)

#модель номер 8 является оптимальной
